var pages = [{'name': 'class RepeatRule(iterations: Int) : TestRule', 'description':'reactivecircus.blueprint.testing.RepeatRule', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-repeat-rule/index.html', 'searchKey':'RepeatRule'},
{'name': 'fun RepeatRule(iterations: Int)', 'description':'reactivecircus.blueprint.testing.RepeatRule.RepeatRule', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-repeat-rule/-repeat-rule.html', 'searchKey':'RepeatRule'},
{'name': 'open override fun apply(base: Statement, description: Description): Statement', 'description':'reactivecircus.blueprint.testing.RepeatRule.apply', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-repeat-rule/apply.html', 'searchKey':'apply'},
{'name': 'interface RobotActions', 'description':'reactivecircus.blueprint.testing.RobotActions', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-robot-actions/index.html', 'searchKey':'RobotActions'},
{'name': 'interface RobotAssertions', 'description':'reactivecircus.blueprint.testing.RobotAssertions', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-robot-assertions/index.html', 'searchKey':'RobotAssertions'},
{'name': 'abstract class ScreenRobot<A : RobotActions, S : RobotAssertions>(robotActions: A, robotAssertions: S)', 'description':'reactivecircus.blueprint.testing.ScreenRobot', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-screen-robot/index.html', 'searchKey':'ScreenRobot'},
{'name': 'fun <A : RobotActions, S : RobotAssertions> ScreenRobot(robotActions: A, robotAssertions: S)', 'description':'reactivecircus.blueprint.testing.ScreenRobot.ScreenRobot', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-screen-robot/-screen-robot.html', 'searchKey':'ScreenRobot'},
{'name': 'fun check(block: S.() -> Unit): S', 'description':'reactivecircus.blueprint.testing.ScreenRobot.check', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-screen-robot/check.html', 'searchKey':'check'},
{'name': 'fun given(block: () -> Unit)', 'description':'reactivecircus.blueprint.testing.ScreenRobot.given', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-screen-robot/given.html', 'searchKey':'given'},
{'name': 'fun perform(block: A.() -> Unit): A', 'description':'reactivecircus.blueprint.testing.ScreenRobot.perform', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/-screen-robot/perform.html', 'searchKey':'perform'},
{'name': 'fun RobotActions.clearTextInView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.clearTextInView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/clear-text-in-view.html', 'searchKey':'clearTextInView'},
{'name': 'fun clickDialogButton1()', 'description':'reactivecircus.blueprint.testing.action.clickDialogButton1', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-dialog-button1.html', 'searchKey':'clickDialogButton1'},
{'name': 'fun clickDialogButton2()', 'description':'reactivecircus.blueprint.testing.action.clickDialogButton2', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-dialog-button2.html', 'searchKey':'clickDialogButton2'},
{'name': 'fun clickDialogButton3()', 'description':'reactivecircus.blueprint.testing.action.clickDialogButton3', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-dialog-button3.html', 'searchKey':'clickDialogButton3'},
{'name': 'fun RobotActions.clickNavigateUpButton()', 'description':'reactivecircus.blueprint.testing.action.clickNavigateUpButton', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-navigate-up-button.html', 'searchKey':'clickNavigateUpButton'},
{'name': 'fun RobotActions.clickRadioButton(radioGroupId: Int, buttonText: String)', 'description':'reactivecircus.blueprint.testing.action.clickRadioButton', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-radio-button.html', 'searchKey':'clickRadioButton'},
{'name': 'fun RobotActions.clickRecyclerViewItem(recyclerViewId: Int, position: Int)', 'description':'reactivecircus.blueprint.testing.action.clickRecyclerViewItem', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-recycler-view-item.html', 'searchKey':'clickRecyclerViewItem'},
{'name': 'fun RobotActions.clickSnackbarActionButton()', 'description':'reactivecircus.blueprint.testing.action.clickSnackbarActionButton', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-snackbar-action-button.html', 'searchKey':'clickSnackbarActionButton'},
{'name': 'fun RobotActions.clickTextInputLayoutEndIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.clickTextInputLayoutEndIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-text-input-layout-end-icon.html', 'searchKey':'clickTextInputLayoutEndIcon'},
{'name': 'fun RobotActions.clickTextInputLayoutErrorIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.clickTextInputLayoutErrorIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-text-input-layout-error-icon.html', 'searchKey':'clickTextInputLayoutErrorIcon'},
{'name': 'fun RobotActions.clickTextInputLayoutStartIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.clickTextInputLayoutStartIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-text-input-layout-start-icon.html', 'searchKey':'clickTextInputLayoutStartIcon'},
{'name': 'fun RobotActions.clickView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.clickView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/click-view.html', 'searchKey':'clickView'},
{'name': 'fun RobotActions.closeDrawer(drawerId: Int)', 'description':'reactivecircus.blueprint.testing.action.closeDrawer', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/close-drawer.html', 'searchKey':'closeDrawer'},
{'name': 'fun RobotActions.closeKeyboard(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.closeKeyboard', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/close-keyboard.html', 'searchKey':'closeKeyboard'},
{'name': 'fun RobotActions.enterTextIntoView(viewId: Int, text: String)', 'description':'reactivecircus.blueprint.testing.action.enterTextIntoView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/enter-text-into-view.html', 'searchKey':'enterTextIntoView'},
{'name': 'fun RobotActions.hideTextInputPasswordToggleButton(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.hideTextInputPasswordToggleButton', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/hide-text-input-password-toggle-button.html', 'searchKey':'hideTextInputPasswordToggleButton'},
{'name': 'fun RobotActions.interceptIntents()', 'description':'reactivecircus.blueprint.testing.action.interceptIntents', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/intercept-intents.html', 'searchKey':'interceptIntents'},
{'name': 'fun RobotActions.longClickTextInputLayoutEndIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.longClickTextInputLayoutEndIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/long-click-text-input-layout-end-icon.html', 'searchKey':'longClickTextInputLayoutEndIcon'},
{'name': 'fun RobotActions.longClickTextInputLayoutErrorIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.longClickTextInputLayoutErrorIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/long-click-text-input-layout-error-icon.html', 'searchKey':'longClickTextInputLayoutErrorIcon'},
{'name': 'fun RobotActions.longClickTextInputLayoutStartIcon(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.longClickTextInputLayoutStartIcon', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/long-click-text-input-layout-start-icon.html', 'searchKey':'longClickTextInputLayoutStartIcon'},
{'name': 'fun RobotActions.longClickView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.longClickView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/long-click-view.html', 'searchKey':'longClickView'},
{'name': 'fun RobotActions.openDrawer(drawerId: Int)', 'description':'reactivecircus.blueprint.testing.action.openDrawer', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/open-drawer.html', 'searchKey':'openDrawer'},
{'name': 'fun RobotActions.pressBack()', 'description':'reactivecircus.blueprint.testing.action.pressBack', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/press-back.html', 'searchKey':'pressBack'},
{'name': 'fun RobotActions.pressKeyboardActionButton(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.pressKeyboardActionButton', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/press-keyboard-action-button.html', 'searchKey':'pressKeyboardActionButton'},
{'name': 'fun RobotActions.replaceTextInView(viewId: Int, text: String)', 'description':'reactivecircus.blueprint.testing.action.replaceTextInView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/replace-text-in-view.html', 'searchKey':'replaceTextInView'},
{'name': 'fun RobotActions.selectBottomNavigationItem(bottomNavigationViewResId: Int, navItemTitle: String)', 'description':'reactivecircus.blueprint.testing.action.selectBottomNavigationItem', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/select-bottom-navigation-item.html', 'searchKey':'selectBottomNavigationItem'},
{'name': 'fun RobotActions.selectCheckBox(layoutId: Int, text: String)', 'description':'reactivecircus.blueprint.testing.action.selectCheckBox', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/select-check-box.html', 'searchKey':'selectCheckBox'},
{'name': 'fun RobotActions.selectNavigationItem(navigationViewResId: Int, menuItemResId: Int)', 'description':'reactivecircus.blueprint.testing.action.selectNavigationItem', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/select-navigation-item.html', 'searchKey':'selectNavigationItem'},
{'name': 'fun swipeDownOnView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.swipeDownOnView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/swipe-down-on-view.html', 'searchKey':'swipeDownOnView'},
{'name': 'fun swipeLeftOnView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.swipeLeftOnView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/swipe-left-on-view.html', 'searchKey':'swipeLeftOnView'},
{'name': 'fun swipeRightOnView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.swipeRightOnView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/swipe-right-on-view.html', 'searchKey':'swipeRightOnView'},
{'name': 'fun swipeUpOnView(viewId: Int)', 'description':'reactivecircus.blueprint.testing.action.swipeUpOnView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.action/swipe-up-on-view.html', 'searchKey':'swipeUpOnView'},
{'name': 'fun Any.asViewAction(delayMillis: Long)', 'description':'reactivecircus.blueprint.testing.asViewAction', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/as-view-action.html', 'searchKey':'asViewAction'},
{'name': 'inline fun <A : Activity> RobotAssertions.activityLaunched()', 'description':'reactivecircus.blueprint.testing.assertion.activityLaunched', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/activity-launched.html', 'searchKey':'activityLaunched'},
{'name': 'fun RobotAssertions.backgroundDrawableDisplayed(resourceId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.backgroundDrawableDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/background-drawable-displayed.html', 'searchKey':'backgroundDrawableDisplayed'},
{'name': 'fun RobotAssertions.bottomNavigationViewItemSelected(bottomNavigationViewResId: Int, selectedItemResId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.bottomNavigationViewItemSelected', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/bottom-navigation-view-item-selected.html', 'searchKey':'bottomNavigationViewItemSelected'},
{'name': 'fun RobotAssertions.dialogWithButton1Displayed(buttonTextResId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.dialogWithButton1Displayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/dialog-with-button1-displayed.html', 'searchKey':'dialogWithButton1Displayed'},
{'name': 'fun RobotAssertions.dialogWithButton2Displayed(buttonTextResId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.dialogWithButton2Displayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/dialog-with-button2-displayed.html', 'searchKey':'dialogWithButton2Displayed'},
{'name': 'fun RobotAssertions.dialogWithButton3Displayed(buttonTextResId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.dialogWithButton3Displayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/dialog-with-button3-displayed.html', 'searchKey':'dialogWithButton3Displayed'},
{'name': 'fun RobotAssertions.drawableDisplayed(resourceId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.drawableDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/drawable-displayed.html', 'searchKey':'drawableDisplayed'},
{'name': 'fun RobotAssertions.drawerClosed(drawerId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.drawerClosed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/drawer-closed.html', 'searchKey':'drawerClosed'},
{'name': 'fun RobotAssertions.drawerOpened(drawerId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.drawerOpened', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/drawer-opened.html', 'searchKey':'drawerOpened'},
{'name': 'fun RobotAssertions.foregroundDrawableDisplayed(resourceId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.foregroundDrawableDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/foreground-drawable-displayed.html', 'searchKey':'foregroundDrawableDisplayed'},
{'name': 'fun RobotAssertions.keyboardInputTypeIsEmail(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.keyboardInputTypeIsEmail', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/keyboard-input-type-is-email.html', 'searchKey':'keyboardInputTypeIsEmail'},
{'name': 'fun RobotAssertions.noActivityDisplayed()', 'description':'reactivecircus.blueprint.testing.assertion.noActivityDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/no-activity-displayed.html', 'searchKey':'noActivityDisplayed'},
{'name': 'fun RobotAssertions.radioButtonSelected(radioGroupId: Int, buttonText: String)', 'description':'reactivecircus.blueprint.testing.assertion.radioButtonSelected', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/radio-button-selected.html', 'searchKey':'radioButtonSelected'},
{'name': 'fun RobotAssertions.radioGroupHasNoSelections(radioGroupId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.radioGroupHasNoSelections', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/radio-group-has-no-selections.html', 'searchKey':'radioGroupHasNoSelections'},
{'name': 'fun RobotAssertions.radioGroupHasSelections(radioGroupId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.radioGroupHasSelections', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/radio-group-has-selections.html', 'searchKey':'radioGroupHasSelections'},
{'name': 'fun RobotAssertions.radioGroupHasText(radioGroupId: Int, vararg buttonTexts: Array<Out String>)', 'description':'reactivecircus.blueprint.testing.assertion.radioGroupHasText', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/radio-group-has-text.html', 'searchKey':'radioGroupHasText'},
{'name': 'fun RobotAssertions.recyclerViewHasSize(recyclerViewId: Int, size: Int)', 'description':'reactivecircus.blueprint.testing.assertion.recyclerViewHasSize', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/recycler-view-has-size.html', 'searchKey':'recyclerViewHasSize'},
{'name': 'fun RobotAssertions.snackBarDisplayed(text: String)', 'description':'reactivecircus.blueprint.testing.assertion.snackBarDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/snack-bar-displayed.html', 'searchKey':'snackBarDisplayed'},
{'name': 'fun RobotAssertions.textInputLayoutHasNoError(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.textInputLayoutHasNoError', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/text-input-layout-has-no-error.html', 'searchKey':'textInputLayoutHasNoError'},
{'name': 'fun RobotAssertions.viewChecked(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewChecked', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-checked.html', 'searchKey':'viewChecked'},
{'name': 'fun RobotAssertions.viewClickable(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewClickable', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-clickable.html', 'searchKey':'viewClickable'},
{'name': 'fun RobotAssertions.viewContainsText(viewId: Int, expected: String)', 'description':'reactivecircus.blueprint.testing.assertion.viewContainsText', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-contains-text.html', 'searchKey':'viewContainsText'},
{'name': 'fun RobotAssertions.viewDisabled(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewDisabled', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-disabled.html', 'searchKey':'viewDisabled'},
{'name': 'fun RobotAssertions.viewDisplayed(vararg viewIds: IntArray)', 'description':'reactivecircus.blueprint.testing.assertion.viewDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-displayed.html', 'searchKey':'viewDisplayed'},
{'name': 'fun RobotAssertions.viewEnabled(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewEnabled', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-enabled.html', 'searchKey':'viewEnabled'},
{'name': 'fun RobotAssertions.viewEndsWithText(viewId: Int, expected: String)', 'description':'reactivecircus.blueprint.testing.assertion.viewEndsWithText', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-ends-with-text.html', 'searchKey':'viewEndsWithText'},
{'name': 'fun RobotAssertions.viewHasHint(viewId: Int, messageResId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewHasHint', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-has-hint.html', 'searchKey':'viewHasHint'},
{'name': 'fun RobotAssertions.viewNotChecked(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewNotChecked', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-not-checked.html', 'searchKey':'viewNotChecked'},
{'name': 'fun RobotAssertions.viewNotClickable(viewId: Int)', 'description':'reactivecircus.blueprint.testing.assertion.viewNotClickable', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-not-clickable.html', 'searchKey':'viewNotClickable'},
{'name': 'fun RobotAssertions.viewNotDisplayed(vararg viewIds: IntArray)', 'description':'reactivecircus.blueprint.testing.assertion.viewNotDisplayed', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-not-displayed.html', 'searchKey':'viewNotDisplayed'},
{'name': 'fun RobotAssertions.viewNotExists(vararg viewIds: IntArray)', 'description':'reactivecircus.blueprint.testing.assertion.viewNotExists', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-not-exists.html', 'searchKey':'viewNotExists'},
{'name': 'fun RobotAssertions.viewStartsWithText(viewId: Int, expected: String)', 'description':'reactivecircus.blueprint.testing.assertion.viewStartsWithText', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.assertion/view-starts-with-text.html', 'searchKey':'viewStartsWithText'},
{'name': 'fun clearToolbarScrollFlags(toolbarId: Int)', 'description':'reactivecircus.blueprint.testing.clearToolbarScrollFlags', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/clear-toolbar-scroll-flags.html', 'searchKey':'clearToolbarScrollFlags'},
{'name': 'fun currentActivity(): Activity?', 'description':'reactivecircus.blueprint.testing.currentActivity', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/current-activity.html', 'searchKey':'currentActivity'},
{'name': 'class RecyclerViewMatcher(recyclerViewId: Int)', 'description':'reactivecircus.blueprint.testing.matcher.RecyclerViewMatcher', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/-recycler-view-matcher/index.html', 'searchKey':'RecyclerViewMatcher'},
{'name': 'fun RecyclerViewMatcher(recyclerViewId: Int)', 'description':'reactivecircus.blueprint.testing.matcher.RecyclerViewMatcher.RecyclerViewMatcher', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/-recycler-view-matcher/-recycler-view-matcher.html', 'searchKey':'RecyclerViewMatcher'},
{'name': 'fun atPosition(position: Int): Matcher<View>', 'description':'reactivecircus.blueprint.testing.matcher.RecyclerViewMatcher.atPosition', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/-recycler-view-matcher/at-position.html', 'searchKey':'atPosition'},
{'name': 'fun atPositionOnView(position: Int, targetViewId: Int): Matcher<View>', 'description':'reactivecircus.blueprint.testing.matcher.RecyclerViewMatcher.atPositionOnView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/-recycler-view-matcher/at-position-on-view.html', 'searchKey':'atPositionOnView'},
{'name': 'fun containsIgnoringCase(subString: String): Matcher<String>', 'description':'reactivecircus.blueprint.testing.matcher.containsIgnoringCase', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/contains-ignoring-case.html', 'searchKey':'containsIgnoringCase'},
{'name': 'fun withRecyclerView(recyclerViewId: Int): RecyclerViewMatcher', 'description':'reactivecircus.blueprint.testing.matcher.withRecyclerView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing.matcher/with-recycler-view.html', 'searchKey':'withRecyclerView'},
{'name': 'fun onRecyclerViewIdle(recyclerViewId: Int)', 'description':'reactivecircus.blueprint.testing.onRecyclerViewIdle', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/on-recycler-view-idle.html', 'searchKey':'onRecyclerViewIdle'},
{'name': 'fun scrollToItemInRecyclerView(recyclerViewId: Int, itemIndex: Int)', 'description':'reactivecircus.blueprint.testing.scrollToItemInRecyclerView', 'location':'blueprint-testing-robot/reactivecircus.blueprint.testing/scroll-to-item-in-recycler-view.html', 'searchKey':'scrollToItemInRecyclerView'}]
